   services:
     web:
       build:
         context: .
       container_name: django_app
       command: sh -c "/app/wait-for-it.sh ${POSTGRES_HOST}:${POSTGRES_PORT} -- python manage.py migrate && gunicorn CVProject.wsgi:application --bind 0.0.0.0:8000"
       environment:
         - ENVIRONMENT=production
       env_file:
         - .env.production
       volumes:
         - .:/app
       ports:
         - "8000:8000"
       depends_on:
         - db

     redis:
       image: "redis:alpine"
       container_name: redis_cache
       ports:
         - "6379:6379"

     celery:
       build: .
       command: celery -A CVProject worker --loglevel=INFO --concurrency=2
       logging:
         driver: "json-file"
         options:
           max-size: "100m"
           max-file: "3"
       volumes:
         - .:/code
       depends_on:
         - redis
       env_file:
         - .env.production

     db:
       image: postgres:14
       container_name: postgres_db
       restart: always
       environment:
         POSTGRES_USER: ${POSTGRES_USER}
         POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
         POSTGRES_DB: ${POSTGRES_DB}
       ports:
         - "${POSTGRES_PORT}:${POSTGRES_PORT}"
       volumes:
         - postgres_data:/var/lib/postgresql/data

   volumes:
     postgres_data:
